# Makefile
.PHONY: new-migration
include .env
export

execute:
	cd cmd/app && go run .

mod:
	go mod tidy
	go mod vendor

build:
	cd cmd/app && go build -o ../../bin/app.exe

build-vendor:
	cd cmd/app && go build -mod=vendor -o ../../bin/app.exe

run: build
	cd cmd/app && ../.././bin/app.exe

all-db-up: 
	cd sql/schema && goose postgres ${POSTGRES_URL} up

all-db-down: 
	cd sql/schema && goose postgres ${POSTGRES_URL} down

mig:
	@if [ "$$cmd" != "" ]; then \
		cd sql/schema && goose postgres ${POSTGRES_URL} $$cmd; \
	else \
		read -p "Please enter a goose command arg's: " cmd; \
		cd sql/schema && goose postgres ${POSTGRES_URL} $$cmd; \
	fi;

mig-create:
	@if [ "$$cmd" != "" ]; then \
		cd sql/schema && goose -s create "$$cmd" sql; \
	else \
		read -p "Please enter a file name: " cmd; \
		cd sql/schema && goose -s create "$$cmd" sql; \
	fi;

# Live Reload
watch:
	@if command -v air > /dev/null; then \
		cd cmd/app && air --build.cmd "go build -o ..\..\bin\app.exe main.go" --build.bin "..\..\bin\app.exe" -- -d; \
	    echo "Watching..."; \
	else \
	    read -p "Go's 'air' is not installed on your machine. Do you want to install it? [Y/n] " choice; \
	    if [ "$$choice" != "n" ] && [ "$$choice" != "N" ]; then \
	        go install github.com/cosmtrek/air@latest; \
	        air -d --build.bin "./bin/api"; \
	        echo "Watching...";\
	    else \
	        echo "You chose not to install air. Exiting..."; \
	        exit 1; \
	    fi; \
	fi

install_swagger:
	go get -u github.com/swaggo/swag/cmd/swag
	go get -u github.com/swaggo/http-swagger
	go get -u github.com/alecthomas/template
	@echo "Run command "swag init" to update the swagger doc everytime there is a change"

	